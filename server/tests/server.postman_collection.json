{
	"info": {
		"_postman_id": "72633d31-bf01-4a63-ab9a-b85013f9bc04",
		"name": "server",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29414206",
		"_collection_link": "https://group5-web-dev.postman.co/workspace/group5-Workspace~b2851e0c-585d-4d33-8ac1-1dfbdc095fe8/collection/29427216-72633d31-bf01-4a63-ab9a-b85013f9bc04?action=share&source=collection_link&creator=29414206"
	},
	"item": [
		{
			"name": "admins",
			"item": [
				{
					"name": "GET /admins",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/v1/admins",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"admins"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST /admins",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,202]);\r",
									"});\r",
									"const responseJson = pm.response.json();\r",
									"const adminId = responseJson._id;\r",
									"pm.environment.set(\"adminId\", adminId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{ \"name\": \"Admin Bee\", \"email\": \"bee.admin@gmail.com\" }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/admins",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"admins"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT /admins/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is in JSON format\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"pm.test(\"Check data assertion\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.email).to.eql(\"bee.admin@gmail.com\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{ \"name\": \"Admin Bee II\", \"email\": \"bee.admin@gmail.com\" }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/admins/{{adminId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"admins",
								"{{adminId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PATCH /admins/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check data assertion\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.email).to.eql(\"the.first.admin@gmail.com\");",
									"});",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{ \"email\": \"the.first.admin@gmail.com\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/admins/{{adminId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"admins",
								"{{adminId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /admins/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is in JSON format\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"pm.test(\"Check for a specific key in the response JSON\", function () {",
									"    pm.response.to.have.jsonBody(\"email\");",
									"});",
									"pm.test(\"Check for a specific key in the response JSON\", function () {",
									"    pm.response.to.have.jsonBody(\"name\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/v1/admins/{{adminId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"admins",
								"{{adminId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE /admins/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/v1/admins/{{adminId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"admins",
								"{{adminId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "override DELETE /admins/:id",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"_method\": \"DELETE\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/admins/{{adminId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"admins",
								"{{adminId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "override PUT /admins/:id",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{ \"_method\": \"PUT\",\"name\": \"Overriding Bee\", \"email\": \"overrider.admin.bee@gmail.com\" }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/admins/{{adminId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"admins",
								"{{adminId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "applications",
			"item": [
				{
					"name": "POST /applications collection",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201 Created\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.test(\"Response is in JSON format\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"const responseJson = pm.response.json();"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    { \"skills\": [\"JavaScript\", \"Node.js\"] },\n    {\n    \"skills\": [\"Python\", \"Django\"],\n    \"questions\": [\n      {\n        \"questionText\": \"What is your preferred web framework?\",\n        \"answer\": \"Django\"\n      }\n    ]},\n    {\n        \"skills\": [\"Java\", \"Spring\"],\n        \"status\": \"Rejected\"\n    },\n    {\n        \"questions\": [\n      {\n        \"questionText\": \"What is your favorite IDE for Java development?\",\n        \"answer\": \"IntelliJ IDEA\"\n      }\n    ]\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/applications",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"applications"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST/applications",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify the response contains the resource ID\", function () {",
									"    const responseBody = pm.response.json();",
									"    pm.expect(responseBody[0]).to.have.property(\"_id\");",
									"    pm.environment.set(\"newResourceId\", responseBody.id);",
									"});",
									"pm.test(\"Response is in JSON format\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"const responseJson = pm.response.json();",
									"const applicationId = responseJson[0]._id;",
									"pm.environment.set(\"applicationId\", applicationId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{   \n    \"skills\": [\"JavaScript\", \"Node.js\"],\n    \"questions\": [{\n        \"questionText\": \"What is the level of your code?\",\n        \"answer\": \"It's DRY and SOLID\"\n        }]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/applications",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"applications"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /applications",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"pm.test(\"Response is in JSON format\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"pm.test(\"Check Content-Type header\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/v1/applications",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"applications"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /application/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"pm.test(\"Response is in JSON format\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"pm.test(\"Check Content-Type header\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/v1/applications/{{applicationId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"applications",
								"{{applicationId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT /applications/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is in JSON format\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"pm.test(\"Check data assertion\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.questions).to.eql([]);",
									"});",
									"pm.test(\"Check data assertion\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.skills).to.eql( [\"JavaScript\", \"Express\", \"Mongoose\"]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "  {\n    \"skills\": [\"JavaScript\", \"Express\", \"Mongoose\" ],\n    \"dateOfApplication\": \"2023-08-14T15:50:34.706Z\",\n    \"questions\": []\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/applications/{{applicationId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"applications",
								"{{applicationId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PATCH /applications/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check data assertion\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.questions).to.eql([]);",
									"});",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{ \"questions\": [] }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/applications/{{applicationId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"applications",
								"{{applicationId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "sort applications",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const sortingOrder = pm.request.url.query.get('order');",
									"const sortParameter = pm.request.url.query.get('sort');",
									"",
									"pm.test(\"Sorting test\", function () {",
									"    const responseJson = pm.response.json();",
									"    for (let i = 0; i < responseJson.length - 1; i++) {",
									"      const currentValue = responseJson[i][sortParameter];",
									"      const nextValue = responseJson[i + 1][sortParameter];",
									"        if (sortingOrder === \"asc\") {",
									"            pm.expect(new Date(currentValue)).to.be.at.most(new Date(nextValue));",
									"        } else {",
									"            pm.expect(new Date(currentValue)).to.be.at.least(new Date(nextValue));",
									"        }",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/v1/applications?sort=dateOfApplication&order=desc",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"applications"
							],
							"query": [
								{
									"key": "sort",
									"value": "dateOfApplication"
								},
								{
									"key": "order",
									"value": "desc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "filter applications",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const desiredCategory = pm.request.url.query.get('status');",
									"pm.test(\"Filtering by category\", function () {",
									"    const responseJson = pm.response.json();",
									"    responseJson.forEach(function (item) {",
									"        pm.expect(item.status).to.eql(desiredCategory);",
									"    });",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/v1/applications?status=Rejected",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"applications"
							],
							"query": [
								{
									"key": "status",
									"value": "Rejected"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE /applications/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/v1/applications/{{applicationId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"applications",
								"{{applicationId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE /applications",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/api/v1/applications",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"applications"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "companies",
			"item": [
				{
					"name": "GET /companies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"pm.test(\"Response is in JSON format\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"pm.test(\"Check Content-Type header\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/v1/companies",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"companies"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST /companies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify the response contains the resource ID\", function () {",
									"    const responseBody = pm.response.json();",
									"    pm.expect(responseBody).to.have.property(\"_id\");",
									"    pm.environment.set(\"newResourceId\", responseBody.id);",
									"});",
									"pm.test(\"Response is in JSON format\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"const responseJson = pm.response.json();",
									"const companyId = responseJson._id;",
									"pm.environment.set(\"companyId\", companyId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{ \"name\": \"Cute Bees\", \"email\": \"bumble.bees@gmail.com\", \"jobs\":[\"6504913b930071ede5087a01\"]}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/companies",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"companies"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT /companies/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is in JSON format\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"pm.test(\"Check data assertion\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.name).to.eql(\"Cute Bees\");",
									"});",
									"pm.test(\"Check data assertion\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.email).to.eql(\"bumble.bees@gmail.com\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{ \"name\": \"Cute Bees\", \"email\": \"bumble.bees@gmail.com\", \"logo\":\"dddNOTNULL\", \"locations\": [] }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/companies/{{companyId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"companies",
								"{{companyId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PATCH /companies/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check data assertion\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.jobs).to.eql([\"6502d74d2350b93179c0c34a\"]);",
									"});",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"jobs\": [\"6502d74d2350b93179c0c34a\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/companies/{{companyId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"companies",
								"{{companyId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /companies/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"pm.test(\"Response is in JSON format\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"pm.test(\"Check Content-Type header\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/v1/companies/{{companyId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"companies",
								"{{companyId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE /companies/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/v1/companies/{{companyId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"companies",
								"{{companyId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "override DELETE /companies/:id",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"_method\": \"DELETE\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/companies/{{companyId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"companies",
								"{{companyId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "override PUT /companies/:id",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"_method\": \"PUT\",\r\n    \"name\": \"Cute Bees\",\r\n    \"email\": \"bumble.bees@gmail.com\",\r\n    \"logo\": \"overriden_logo\",\r\n    \"locations\": [\r\n        \"Gothenburg\"\r\n    ],\r\n    \"jobs\": [\r\n        \"6504913b930071ede5087a01\"\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/companies/{{companyId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"companies",
								"{{companyId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "companyJobs",
			"item": [
				{
					"name": "GET /companies/:id/jobs",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/v1/companies/650491bd3e8deb7ec64b821b/jobs/",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"companies",
								"650491bd3e8deb7ec64b821b",
								"jobs",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /companies/:id/jobs/:id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/v1/companies/650185f8ba7f7681f86eeee8/jobs/6502d74d2350b93179c0c34a",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"companies",
								"650185f8ba7f7681f86eeee8",
								"jobs",
								"6502d74d2350b93179c0c34a"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "jobs",
			"item": [
				{
					"name": "POST/jobs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify that the response has a 201 status code\", function(){",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.test(\"Response is in JSON format\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"pm.test(\"Set the new job id as an environment variable\", function(){",
									"    const responseBody = pm.response.json();",
									"    const jobID = responseBody._id;",
									"    pm.environment.set(\"newJobId\", jobID);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"Senior Program Manager\",\n    \"requirements\": \"Masters in Software Engineering and Management\",\n    \"validation\": true,\n    \"application_questions\": \"Do you have experience?\",\n    \"deadline\": \"2023-10-10\",\n    \"companyId\": \"650185f8ba7f7681f86eeee8\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/jobs",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"jobs"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET/jobs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify GET request for all jobs returns a 200 status code\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"pm.test(\"Response is in JSON format\", function () {",
									"    pm.response.to.be.json;",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/jobs",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"jobs"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET/jobs/:id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/v1/jobs/6502cfb49aee073a49f3ba7a",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"jobs",
								"6502cfb49aee073a49f3ba7a"
							]
						}
					},
					"response": []
				},
				{
					"name": "PATCH/jobs/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check data assertion\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.companyId).to.eql(\"650185f8ba7f7681f86eeee8\");",
									"});",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"companyId\": \"650185f8ba7f7681f86eeee8\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/jobs/650c4071aa15264474bc79da",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"jobs",
								"650c4071aa15264474bc79da"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT/jobs/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is in JSON format\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"pm.test(\"Check data assertion\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.description).to.eql(\"Professor of Software Architecture\");",
									"    pm.expect(jsonData.requirements).to.eql(\"PhD in Software Engineering\");",
									"    pm.expect(jsonData.validation).to.eql(true);",
									"    pm.expect(jsonData.application_questions).to.eql(\"Do you like teaching?\");",
									"    pm.expect(jsonData.deadline).to.eql(\"2023-10-10\");",
									"});",
									"pm.test(\"Status code is 200\", function(){",
									"    pm.response.to.have.status(200);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"Professor of Software Architecture\",\n    \"requirements\": \"PhD in Software Engineering\",\n    \"validation\": true,\n    \"application_questions\": \"Do you like teaching?\",\n    \"deadline\": \"2023-10-10\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/jobs/650d8dfed565b1ba2b78dd03",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"jobs",
								"650d8dfed565b1ba2b78dd03"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE/jobs/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/jobs/650d8dfed565b1ba2b78dd03",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"jobs",
								"650d8dfed565b1ba2b78dd03"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE/jobs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/jobs",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"jobs"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "jobApplications",
			"item": [
				{
					"name": "POST job application",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{   \n    \"skills\": [\"JavaScript\", \"Node.js\"],\n    \"questions\": [{\n        \"questionText\": \"What is the level of your code?\",\n        \"answer\": \"It's DRY and SOLID\"\n        }]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/jobs/65033af73d3e0a61f7e9cc38/applications",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"jobs",
								"65033af73d3e0a61f7e9cc38",
								"applications"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET all job applications",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/v1/jobs/6504913b930071ede5087a01/applications",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"jobs",
								"6504913b930071ede5087a01",
								"applications"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET one job application",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/v1/jobs/6502ba34b273c42593457b5e/applications/65031c292a2d0f76bf885ebb",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"jobs",
								"6502ba34b273c42593457b5e",
								"applications",
								"65031c292a2d0f76bf885ebb"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE job application",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/v1/jobs/6502ba34b273c42593457b5e/applications/650305b0f74ca1c1dc5f4a7d",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"jobs",
								"6502ba34b273c42593457b5e",
								"applications",
								"650305b0f74ca1c1dc5f4a7d"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}